
Ejercicio base de datos, clase 20-08

-----------------------------------------------Creación de tablas:---------------------------------------

-- MySQL Script generated by MySQL Workbench
-- Tue Aug 20 18:13:24 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema comercio
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema comercio
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `comercio` ;
USE `comercio` ;

-- -----------------------------------------------------
-- Table `comercio`.`tipos_id`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`tipos_id` (
  `tipo_id` VARCHAR(2) NOT NULL,
  `descripcion` VARCHAR(30) NULL,
  PRIMARY KEY (`tipo_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`clientes` (
  `id` VARCHAR(15) NOT NULL,
  `tipos_id_tipo_id` VARCHAR(2) NOT NULL,
  `nombres` VARCHAR(255) NULL,
  `apellidos` VARCHAR(255) NULL,
  `fecha_nacimiento` DATETIME NULL,
  PRIMARY KEY (`id`, `tipos_id_tipo_id`),
  INDEX `fk_clientes_tipos_id1_idx` (`tipos_id_tipo_id` ASC) VISIBLE,
  CONSTRAINT `fk_clientes_tipos_id1`
    FOREIGN KEY (`tipos_id_tipo_id`)
    REFERENCES `comercio`.`tipos_id` (`tipo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`medios_pago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`medios_pago` (
  `id` VARCHAR(3) NOT NULL,
  `descripcion` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`facturas_venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`facturas_venta` (
  `id` INT(11) NOT NULL,
  `clientes_id` VARCHAR(15) NOT NULL,
  `clientes_tipos_id_tipo_id` VARCHAR(2) NOT NULL,
  `medios pago_id` VARCHAR(3) NOT NULL,
  `valor` INT(11) NULL,
  `fecha` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_facturas_venta_medios pago1_idx` (`medios pago_id` ASC) VISIBLE,
  INDEX `fk_facturas_venta_clientes1_idx` (`clientes_id` ASC, `clientes_tipos_id_tipo_id` ASC) VISIBLE,
  CONSTRAINT `fk_facturas_venta_medios pago1`
    FOREIGN KEY (`medios pago_id`)
    REFERENCES `comercio`.`medios_pago` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_facturas_venta_clientes1`
    FOREIGN KEY (`clientes_id` , `clientes_tipos_id_tipo_id`)
    REFERENCES `comercio`.`clientes` (`id` , `tipos_id_tipo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`productos` (
  `id` VARCHAR(10) NOT NULL,
  `tipo` VARCHAR(30) NULL,
  `nombre` VARCHAR(100) NULL,
  `precio` INT(9) NULL,
  `descripcion` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`unidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`unidad` (
  `id_unidad` INT NOT NULL,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_unidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`insumos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`insumos` (
  `id` VARCHAR(10) NOT NULL,
  `tipo` VARCHAR(20) NULL,
  `nombre` VARCHAR(255) NULL,
  `costo` INT(9) NULL,
  `unidad_id_unidad` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_insumos_unidad1_idx` (`unidad_id_unidad` ASC) VISIBLE,
  CONSTRAINT `fk_insumos_unidad1`
    FOREIGN KEY (`unidad_id_unidad`)
    REFERENCES `comercio`.`unidad` (`id_unidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`recetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`recetas` (
  `insumos_id` VARCHAR(10) NOT NULL,
  `productos_id` VARCHAR(10) NOT NULL,
  `cantidad` SMALLINT(255) NULL,
  INDEX `fk_recetas_productos1_idx` (`productos_id` ASC) VISIBLE,
  PRIMARY KEY (`insumos_id`, `productos_id`),
  INDEX `fk_recetas_insumos1_idx` (`insumos_id` ASC) VISIBLE,
  CONSTRAINT `fk_recetas_productos1`
    FOREIGN KEY (`productos_id`)
    REFERENCES `comercio`.`productos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_recetas_insumos1`
    FOREIGN KEY (`insumos_id`)
    REFERENCES `comercio`.`insumos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`proveedores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`proveedores` (
  `id` VARCHAR(15) NOT NULL,
  `tipos_id_tipo_id` VARCHAR(2) NOT NULL,
  `nombre` VARCHAR(255) NULL,
  `direccion` VARCHAR(255) NULL,
  `telefono` VARCHAR(15) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_proveedores_tipos_id1_idx` (`tipos_id_tipo_id` ASC) VISIBLE,
  CONSTRAINT `fk_proveedores_tipos_id1`
    FOREIGN KEY (`tipos_id_tipo_id`)
    REFERENCES `comercio`.`tipos_id` (`tipo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`insumos_proveedores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`insumos_proveedores` (
  `proveedores_id` VARCHAR(15) NOT NULL,
  `proveedores_tipo_id` VARCHAR(2) NOT NULL,
  `insumos_id` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`proveedores_id`, `proveedores_tipo_id`, `insumos_id`),
  INDEX `fk_insumos_proveedores_insumos1_idx` (`insumos_id` ASC) VISIBLE,
  INDEX `fk_insumos_proveedores_proveedores1_idx` (`proveedores_id` ASC, `proveedores_tipo_id` ASC) VISIBLE,
  CONSTRAINT `fk_insumos_proveedores_insumos1`
    FOREIGN KEY (`insumos_id`)
    REFERENCES `comercio`.`insumos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_insumos_proveedores_proveedores1`
    FOREIGN KEY (`proveedores_id`)
    REFERENCES `comercio`.`proveedores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comercio`.`pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comercio`.`pedidos` (
  `facturas_venta_id` INT(11) NOT NULL,
  `productos_id` VARCHAR(10) NOT NULL,
  `fecha` DATE NULL,
  INDEX `fk_pedidos_facturas_venta1_idx` (`facturas_venta_id` ASC) VISIBLE,
  INDEX `fk_pedidos_productos1_idx` (`productos_id` ASC) VISIBLE,
  PRIMARY KEY (`facturas_venta_id`, `productos_id`),
  CONSTRAINT `fk_pedidos_facturas_venta1`
    FOREIGN KEY (`facturas_venta_id`)
    REFERENCES `comercio`.`facturas_venta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedidos_productos1`
    FOREIGN KEY (`productos_id`)
    REFERENCES `comercio`.`productos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

----------------------------------------------------Inserts-------------------------------------------------

INSERT INTO tipos_id (tipo_id, descripcion) VALUES
 ('CC', 'Cédula de Ciudadanía'),
 ('TI', 'Tarjeta de Identidad'),
 ('NIT', 'Número de Identificación Tributaria'),
 ('CE', 'Cédula de Extrangería')
 ('PP', 'Pasaporte')

 INSERT INTO clientes (id, tipos_id_tipo_id, nombres, apellidos, fecha_nacimiento) VALUES 
  ('C001', 'CC', 'Juan', 'Pérez', '1980-01-01'), 
  ('C002', 'CC', 'María', 'Gómez', '1985-02-15'), 
  ('C003', 'CC', 'Carlos', 'Rodríguez', '1990-03-10'), 
  ('C004', 'TI', 'Ana', 'Martínez', '2000-04-20'), 
  ('C005', 'TI', 'Luis', 'Fernández', '1995-05-25'),
  ('C006', 'CC', 'Jorge', 'López', '1982-06-30'), 
  ('C007', 'CC', 'Pedro', 'Díaz', '1975-07-10'), 
  ('C008', 'CC', 'Laura', 'Hernández', '1992-08-08'),
  ('C009', 'CC', 'Marta', 'Jiménez', '1988-09-12'),
  ('C010', 'TI', 'Sofía', 'García', '1999-10-05');



INSERT INTO proveedores (id, tipos_id_tipo_id, nombre, direccion, telefono) VALUES 
 ('P001', 'NIT', 'Proveedor A', 'Calle 1 #10-20', '3101234567'), 
 ('P002', 'NIT', 'Proveedor B', 'Calle 2 #20-30', '3111234567'), 
 ('P003', 'NIT', 'Proveedor C', 'Calle 3 #30-40', '3121234567'), 
 ('P004', 'NIT', 'Proveedor D', 'Calle 4 #40-50', '3131234567'), 
 ('P005', 'NIT', 'Proveedor E', 'Calle 5 #50-60', '3141234567'), 
 ('P006', 'NIT', 'Proveedor F', 'Calle 6 #60-70', '3151234567'), 
 ('P007', 'NIT', 'Proveedor G', 'Calle 7 #70-80', '3161234567'), 
 ('P008', 'NIT', 'Proveedor H', 'Calle 8 #80-90', '3171234567'), 
 ('P009', 'NIT', 'Proveedor I', 'Calle 9 #90-100', '3181234567'), 
 ('P010', 'NIT', 'Proveedor J', 'Calle 10 #100-110', '3191234567');

INSERT INTO unidad (id_unidad, descripcion) VALUES
 (1, 'Kilogramo'),
 (2, 'Litro'),
 (3, 'Unidad');

INSERT INTO insumos (id, tipo, nombre, costo, unidad_id_unidad) VALUES
 ('I001', 'Materia Prima', 'Harina', 1500, 1),
 ('I002', 'Materia Prima', 'Azúcar', 1000, 1),
 ('I003', 'Materia Prima', 'Leche', 3000, 2),
 ('I004', 'Materia Prima', 'Huevos', 500, 3),
 ('I005', 'Materia Prima', 'Mantequilla', 2500, 1),
 ('I006', 'Materia Prima', 'Sal', 800, 1),
 ('I007', 'Materia Prima', 'Café', 2000, 1),
 ('I008', 'Materia Prima', 'Chocolate', 2500, 1),
 ('I009', 'Materia Prima', 'Agua', 500, 2),
 ('I010', 'Materia Prima', 'Levadura', 1200, 1);


INSERT INTO productos (id, tipo, nombre, precio, descripcion) VALUES
 ('P001', 'Producto Terminado', 'Pan de Chocolate', 10000, 'Pan hecho con chocolate'),
 ('P002', 'Producto Terminado', 'Torta de Vainilla', 15000, 'Torta hecha con esencia de vainilla'),
 ('P003', 'Producto Terminado', 'Croissant', 5000, 'Croissant de mantequilla'),
 ('P004', 'Producto Terminado', 'Galletas', 7000, 'Galletas de avena'),
 ('P005', 'Producto Terminado', 'Café', 3000, 'Taza de café negro'),
 ('P006', 'Producto Terminado', 'Capuchino', 4000, 'Café con leche y espuma'),
 ('P007', 'Producto Terminado', 'Sandwich', 8000, 'Sandwich de jamón y queso'),
 ('P008', 'Producto Terminado', 'Empanada', 3000, 'Empanada de carne'),
 ('P009', 'Producto Terminado', 'Jugos', 2000, 'Jugo natural de frutas'),
 ('P010', 'Producto Terminado', 'Té', 2500, 'Té negro');

INSERT INTO recetas (insumos_id, productos_id, cantidad) VALUES
 ('I001', 'P001', 2),
 ('I002', 'P001', 1),
 ('I008', 'P001', 1),
 ('I005', 'P003', 2),
 ('I004', 'P003', 2),
 ('I003', 'P006', 1),
 ('I009', 'P006', 1),
 ('I010', 'P006', 1),
 ('I007', 'P005', 1),
 ('I009', 'P005', 1);

INSERT INTO medios_pago (id, descripcion) VALUES
 ('MP1', 'Efectivo'),
 ('MP2', 'Tarjeta de Crédito'),
 ('MP3', 'Transferencia Bancaria');


----------------------------------------------------Preguntas-----------------------------------------------

◦Construir una Transacción de venta de 2 productos, para un cliente, que realizo su pago con tarjeta de crédito
◦Construir una transacción donde se actualice una receta ya existente, con un nuevo insumo.

1.
Un cliente existente va a realizar una compra
El cliente comprará dos productos
EL método de pago será tarjeta de credito

1.a 
Insertar en "facturas_ventas"
	-Crear una nueva factura que asocie al ciente y al método de pago.
1.b
Insertar en la tabla "pedidos"
	- Registrar los productos comprados asociados a la factura de venta.

Supongamos que el cliente con el id = "C001" va a comprar
los productos son "POO1" y "POO2"
El método de pago es "Tajeta de Cŕedito" qué está en la tabla "medios_de_pago" con id = "TC"

Función

START TRANSACTION;

INSERT INTO facturas_venta (clientes_id, clientes_tipos_id_tipo_id, medios_de_pago_id, valor, fecha)
VALUES ('C001', 'CC', 'TC', 50000, NOW());

-- Asumimos que la factura generada tiene id = 1, usa LAST_INSERT_ID() para obtenerla

SET @factura_id = LAST_INSERT_ID();



INSERT INTO pedidos (facturas_venta_id, productos_id, fecha)
VALUES (@factura_id, 'P001', NOW()),
       (@factura_id, 'P002', NOW());


COMMIT;


2.
Construir una Transacción para Actualizar una Receta Existente con un Nuevo Insumo

START TRANSACTION;

INSERT INTO recetas (insumos_id, productos_id, cantidad)
VALUES ('I003', 'P001', 100);

COMMIT;
